@model SMLApplication.Web.Models.AppointmentsCreateViewModel
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-1.4.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Appointment</legend>

        @if (this.User.IsInRole("Doctor"))
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.doctorAppointment.PatientId, "Patient")
            </div>
            <div class="editor-field">
                @Html.DropDownList("doctorAppointment.PatientId", (IEnumerable<SelectListItem>)ViewBag.Patients, "--- Select a Patient ---")
                @Html.ValidationMessageFor(model => model.doctorAppointment.PatientId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.doctorAppointment.AppointmentDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.doctorAppointment.AppointmentDate)
                @Html.ValidationMessageFor(model => model.doctorAppointment.AppointmentDate)
            </div>
        }
        else
        {
            <div id="tabs">

                <ul>
                    <li><a href="#tabs-1">Tab Header 1</a></li>
                    <li><a href="#tabs-2">Tab Header 2</a></li>
                    <li><a href="#tabs-3">Tab Header 3</a></li>
                </ul>

                <div id="tabs-1">

                    @if (this.User.IsInRole("Admin"))
                    {
                         // Doctor 
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.DoctorId, "Doctor")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("tab1Appointment.DoctorId", (IEnumerable<SelectListItem>)ViewBag.Doctors, "--- Select a Doctor ---")
                            @Html.ValidationMessageFor(model => model.tab1Appointment.DoctorId)
                        </div>

                            //Specialization
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.Doctor.SpecializationId, "Specialization")
                        </div>
                        <div class="editor-field">

                            @Html.DropDownList("tab1Appointment.SpecializationId", (IEnumerable<SelectListItem>)ViewBag.Specializations, "--- Select Specialization ---")
                            @Html.ValidationMessageFor(model => model.tab1Appointment.Doctor.SpecializationId)
                        </div>

                            //Patient
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.PatientId, "Patient")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("tab1Appointment.PatientId", (IEnumerable<SelectListItem>)ViewBag.Patients, "--- Select a Patient ---")
                            @Html.ValidationMessageFor(model => model.tab1Appointment.PatientId)
                        </div>

                            //Date
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.AppointmentDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.tab1Appointment.AppointmentDate)
                            @Html.ValidationMessageFor(model => model.tab1Appointment.AppointmentDate)
                        </div>
                    }
                    else if (this.User.IsInRole("Patient"))
                    {
                        // Doctor 
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.DoctorId, "Doctor")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("tab1Appointment.DoctorId", (IEnumerable<SelectListItem>)ViewBag.Doctors, "--- Select a Doctor ---")
                            @Html.ValidationMessageFor(model => model.tab1Appointment.DoctorId)
                        </div>

                        //Specialization
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.Doctor.SpecializationId, "Specialization")
                        </div>
                        <div class="editor-field">

                            @Html.DropDownList("tab1Appointment.SpecializationId", (IEnumerable<SelectListItem>)ViewBag.Specializations, "--- Select Specialization ---")
                            @Html.ValidationMessageFor(model => model.tab1Appointment.Doctor.SpecializationId)
                        </div>

                        //Date
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab1Appointment.AppointmentDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.tab1Appointment.AppointmentDate)
                            @Html.ValidationMessageFor(model => model.tab1Appointment.AppointmentDate)
                        </div>
                    }
                    
                </div>

                <div id="tabs-2">
                    @if (this.User.IsInRole("Admin"))
                    {
                       
                            // Doctor 
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.DoctorId, "Doctor")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("tab2Appointment.DoctorId", (IEnumerable<SelectListItem>)ViewBag.Doctors, "--- Select a Doctor ---")
                            @Html.ValidationMessageFor(model => model.tab2Appointment.DoctorId)
                        </div>

                            //Specialization
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.Doctor.SpecializationId, "Specialization")
                        </div>
                        <div class="editor-field">

                            @Html.DropDownList("tab2Appointment.SpecializationId", (IEnumerable<SelectListItem>)ViewBag.Specializations, "--- Select Specialization ---")
                            @Html.ValidationMessageFor(model => model.tab2Appointment.Doctor.SpecializationId)
                        </div>

                            //Patient
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.PatientId, "Patient")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("tab2Appointment.PatientId", (IEnumerable<SelectListItem>)ViewBag.Patients, "--- Select a Patient ---")
                            @Html.ValidationMessageFor(model => model.tab2Appointment.PatientId)
                        </div>

                            //Date
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.AppointmentDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.tab2Appointment.AppointmentDate)
                            @Html.ValidationMessageFor(model => model.tab2Appointment.AppointmentDate)
                        </div>
                    }
                    else if (this.User.IsInRole("Patient"))
                    {
                        // Doctor 
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.DoctorId, "Doctor")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("tab2Appointment.DoctorId", (IEnumerable<SelectListItem>)ViewBag.Doctors, "--- Select a Doctor ---")
                            @Html.ValidationMessageFor(model => model.tab2Appointment.DoctorId)
                        </div>

                        //Specialization
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.Doctor.SpecializationId, "Specialization")
                        </div>
                        <div class="editor-field">

                            @Html.DropDownList("tab2Appointment.SpecializationId", (IEnumerable<SelectListItem>)ViewBag.Specializations, "--- Select Specialization ---")
                            @Html.ValidationMessageFor(model => model.tab2Appointment.Doctor.SpecializationId)
                        </div>

                        //Date
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tab2Appointment.AppointmentDate)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.tab2Appointment.AppointmentDate)
                            @Html.ValidationMessageFor(model => model.tab2Appointment.AppointmentDate)
                        </div>
                    }
                    
                </div>

                <div id="tabs-3">
                    Content for Tab 3 goes here.<br />
                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit,
                    sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
                </div>

            </div>
        }
        
        @*<div class="form-group input-group-sm">
                @Html.LabelFor(model => model.Appointmentdate)
                @Html.TextBoxFor(model => model.Appointmentdate, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })
                @Html.ValidationMessageFor(model => model.Appointmentdate)
            </div>*@
        @* @Html.HiddenFor(model => model.currentTab, 1)*@
        @Html.HiddenFor(model => model.currentTab)
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script type="text/javascript">
            $('.datepicker').datepicker(); //Initialise any date pickers
        </script>*@

    <script type="text/javascript">
        $(document).ready(function () {
            $('#AppointmentDate').datepicker();
            $("#currentTab").val(1);
            $(function () {
                $("#tabs").tabs();
                //$("#tabs-2").children().attr("disabled", "disabled");
            });

            $('#tabs').tabs({
                select: function (event, ui) {
                    // Do stuff here
                    alert(ui.index)

                    if (ui.index == 0) {
                        // $("#tabs-2").empty();
                        $("#currentTab").val(1);
                    }
                    else if (ui.index == 1) {
                        //$("#tabs-1").empty();
                        $("#currentTab").val(2);

                    }
                }
            });

            $("#SpecializationId").change(function change() {

                var selectedText = $("#SpecializationId option:selected").text();
                var specilaizationId = $('#SpecializationId').val()

                //Check whether the select text item
                if (!selectedText.indexOf("Select") >= 0) {
                    //alert(selectedIndex);
                    $.getJSON("/Appointments/GetDoctorsBySpecialization/", { id: specilaizationId }, function (result) {

                        var doctorDropDown = $("#DoctorId")
                        doctorDropDown.empty();

                        $.each(result, function () {
                            doctorDropDown.append($("<option />").val(this.DoctorId).text(this.Name));
                        });
                    });
                }
            })



            $("#DoctorId").change(function change() {

                var selectedText = $("#DoctorId option:selected").text();
                var doctorId = $('#DoctorId').val()

                //Check whether the select text item
                if (!selectedText.indexOf("Select") >= 0) {
                    //alert(selectedIndex);
                    $.getJSON("/Appointments/GetSpecializationByDoctorID/", { id: doctorId }, function (result) {

                        var specilizationDropDown = $("#SpecializationId")
                        specilizationDropDown.empty();

                        $.each(result, function () {
                            specilizationDropDown.append($("<option />").val(this.SpecializationId).text(this.SpecializationName));
                        });
                    });
                }
            })
        });
    </script>
}


